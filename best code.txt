require('dotenv').config();

const { Client, GatewayIntentBits, EmbedBuilder } = require('discord.js');
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

// Trigger when the bot is ready
client.once('ready', () => {
    console.log(`Logged in as ${client.user.tag}`);
});

// Respond to "i" to get the avatar or "b" to get the banner
client.on('messageCreate', async message => {
    // Check if the message starts with "i" or "b"
    if (message.content.toLowerCase().startsWith('i') || message.content.toLowerCase().startsWith('b')) {
        // Determine if we are fetching avatar or banner
        const type = message.content.toLowerCase().startsWith('b') ? 'banner' : 'avatar';

        // Get the first mentioned user, or the message author if no one is mentioned
        let user = message.mentions.users.first() || message.author;

        // Handle banner request
        if (type === 'banner') {
            // Fetch the user's banner
            let userWithBanner = await client.users.fetch(user.id, { force: true });
            let bannerURL = userWithBanner.bannerURL({ dynamic: true, size: 512 });

            // Check if the user has a banner
            if (!bannerURL) {
                // Send a message if the user doesn't have a banner
                const noBannerEmbed = new EmbedBuilder()
                    .setAuthor({ name: user.username, iconURL: user.displayAvatarURL({ dynamic: true, size: 32 }) })
                    .setDescription('This user does not have a banner.')
                    .setColor(0xff0000) // Red color to indicate a warning or error
                    .setFooter({ text: `Requested by ${message.author.username}`, iconURL: message.author.displayAvatarURL({ dynamic: true }) });

                await message.reply({ embeds: [noBannerEmbed] });
                return;
            }

            // Create an embed with the banner image if available
            const bannerEmbed = new EmbedBuilder()
                .setAuthor({ name: user.username, iconURL: user.displayAvatarURL({ dynamic: true, size: 32 }) })
                .setTitle('Banner Link')
                .setURL(bannerURL) // Set the URL to which the title links
                .setColor(0x1e90ff) // You can change the color to whatever you'd like
                .setImage(bannerURL) // Show the banner in the embed
                .setFooter({ text: `Requested by ${message.author.username}`, iconURL: message.author.displayAvatarURL({ dynamic: true }) });

            await message.reply({ embeds: [bannerEmbed] });
        } else {
            // Handle avatar request
            let avatarURL = user.displayAvatarURL({ dynamic: true, size: 512 });
            const avatarEmbed = new EmbedBuilder()
                .setAuthor({ name: user.username, iconURL: user.displayAvatarURL({ dynamic: true, size: 32 }) })
                .setTitle('Avatar Link')
                .setURL(avatarURL) // Set the URL to which the title links
                .setColor(0x008080) // You can change the color to whatever you'd like
                .setImage(avatarURL) // Show the avatar in the embed
                .setFooter({ text: `Requested by ${message.author.username}`, iconURL: message.author.displayAvatarURL({ dynamic: true }) });

            await message.reply({ embeds: [avatarEmbed] });
        }
    }
});

// Log in to Discord with your bot token from the .env file
client.login(process.env.TOKEN);
